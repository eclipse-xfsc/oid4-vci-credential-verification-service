replicaCount: 1
name: credential-verification-service

image:
  repository: node-654e3bca7fbeeed18f81d7c7.ps-xaas.io/ocm-wstack
  name: credential-verification-service
  # -- Image tag
  # Uses .Chart.AppVersion if empty
#  tag: "debug-mode"
  tag: "main"

  # -- Image sha, usually generated by the CI
  # Uses image.tag if empty
  sha: ""
  # -- Image pull policy
  pullPolicy: Always
  # -- Image pull secret when internal image is used
  #pullSecrets: key

podAnnotations: {}

resources:
  # requests:
  #   cpu: 25m
  #   memory: 64Mi
  # limits:
  #   cpu: 150m
  #   memory: 128Mi

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-DID did:web:cloud-wallet.xfsc.dev;
      proxy_set_header X-NAMESPACE tenant_space;
      proxy_set_header X-KEY eckey;
    nginx.org/client-max-body-size: 2K #Maximum Size of Credentials which are uploadable
    nginx.ingress.kubernetes.io/rewrite-target: /v1/tenants/tenant_space/presentation/$2
  hosts:
    - host: cloud-wallet.xfsc.dev
      paths:
        - path: /api/presentation(/|$)(.*)
          port: 8080
          pathType: ImplementationSpecific

  tls:
    - secretName: xfsc-wildcard
      hosts:
        - cloud-wallet.xfsc.dev


service:
  port: 8080
  type: ClusterIP

server:
  http:
    host: "0.0.0.0"
    port: 8080

security:
  runAsNonRoot: false
  runAsUid: 1000
  runAsGid: 1000
 
config:
  #  serverMode: debug
  serverMode: production
  disableTLS: false
  cassandra:
    Key: cassandra-password
    Name: cassandra
    cassandraHosts: cassandra.cassandra.svc.cluster.local
    cassandraUser: cassandra
  signing:
    Name:  signing
    Key:   signing-key
  servingPort: 8080
  country: DE
  region: EU
  didResolver: http://universal-resolver-service.default.svc.cluster.local:8080
  externalPresentation:
    enabled: true
    authorizeEndpoint: credential-verification-service.default.svc.cluster.local:8080/v1/tenants/tenant_space/presentation/
    requestObjectPolicy:
    clientIdPolicy:
    clientUrlSchema: https
  signerService:
    presentationVerifyUrl: http://signer.default.svc.cluster.local:8080/v1/presentation/verify
    presentationSignUrl: http://signer.default.svc.cluster.local:8080/v1/presentation/proof
    signerTopic: signer-topic
  topics:
    authorization: presentation.authorisation
    authorizationReply: presentation.authorisation.reply
    proofNotify: presentation.proof.notify
    presentationRequest: request
    storageRequest: storage
  messaging:
    protocol: nats
    nats:
      url: nats.nats.svc.cluster.local:4222
      queueGroup: credential-verification-service #optional
      timeoutInSec: 10 #optional
