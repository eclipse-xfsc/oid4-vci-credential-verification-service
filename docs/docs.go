// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/internal/list/proofs/{groupId}": {
            "get": {
                "description": "Lists proofs for a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Lists proofs for a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.VerificationEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/internal/proofs/proof/request/{id}": {
            "get": {
                "description": "Retrieves a proof request by its request ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Retrieves a proof request by its request ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof RequestID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VerificationEntry"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Completes and proof request by signing and posting it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Completes and proof request by signing and posting it",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof RequestID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Proof Model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProofModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/internal/proofs/proof/{id}": {
            "get": {
                "description": "Retrieves a proof request by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Retrieves a proof request by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VerificationEntry"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Completes and proof request by signing and posting it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Completes and proof request by signing and posting it",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Proof Model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProofModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/internal/proofs/proof/{id}/assign/{groupId}": {
            "put": {
                "description": "Assigns record to account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Assigns record to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/presentation/authorize": {
            "get": {
                "description": "Handles the authorization request by checking the client_id and request_uri parameters, and then handling the request object",
                "tags": [
                    "external"
                ],
                "summary": "Handles the authorization request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request URI",
                        "name": "request_uri",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Auth URL",
                        "name": "authUrl",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/presentation/proof/{id}": {
            "post": {
                "description": "Handles the proof request by checking the content type and form data, and then processing the presentations",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external"
                ],
                "summary": "Handles the proof request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The presentation token",
                        "name": "vp_token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The presentation submission",
                        "name": "presentation_submission",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/presentation/proof/{id}/request-object/request.jwt": {
            "get": {
                "description": "Responds with a request object by fetching the request object and setting it as fetched",
                "produces": [
                    "application/jwt"
                ],
                "tags": [
                    "external"
                ],
                "summary": "Responds with a request object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/presentation/request": {
            "get": {
                "description": "Handles the request for presentation by creating a presentation request with the provided parameters",
                "produces": [
                    "application/jwt"
                ],
                "tags": [
                    "external"
                ],
                "summary": "Handles the request for presentation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "requestId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "TTL",
                        "name": "ttl",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Presentation Definition base64 url encoded",
                        "name": "presentationDefinition",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ProofModel": {
            "type": "object",
            "properties": {
                "holderDid": {
                    "type": "string"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presentation.FilterResult"
                    }
                },
                "signGroup": {
                    "type": "string"
                },
                "signKey": {
                    "type": "string"
                },
                "signNamespace": {
                    "type": "string"
                }
            }
        },
        "model.VerificationEntry": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "groupid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastUpdateTimeStamp": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "presentation": {
                    "type": "array",
                    "items": {}
                },
                "presentationDefinition": {
                    "$ref": "#/definitions/presentation.PresentationDefinition"
                },
                "redirectUri": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                },
                "responseMode": {
                    "type": "string"
                },
                "responseType": {
                    "type": "string"
                },
                "responseUri": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "presentation.Alg": {
            "type": "string",
            "enum": [
                "EdDSA",
                "ES256",
                "PS256"
            ],
            "x-enum-varnames": [
                "EDDSA",
                "ES256",
                "PS256"
            ]
        },
        "presentation.Constraints": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "The constraints object MAY contain a fields property",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presentation.Field"
                    }
                },
                "limit_disclosure": {
                    "description": "The constraints object MAY contain a limit_disclosure property",
                    "allOf": [
                        {
                            "$ref": "#/definitions/presentation.Disclosure"
                        }
                    ]
                }
            }
        },
        "presentation.Description": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "presentation.Disclosure": {
            "type": "string",
            "enum": [
                "required",
                "preferred"
            ],
            "x-enum-varnames": [
                "Required",
                "Preferred"
            ]
        },
        "presentation.Field": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Optional Field",
                    "allOf": [
                        {
                            "$ref": "#/definitions/presentation.Filter"
                        }
                    ]
                },
                "id": {
                    "description": "Optional Field",
                    "type": "string"
                },
                "name": {
                    "description": "Optional Field",
                    "type": "string"
                },
                "path": {
                    "description": "Mandatory Field",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "purpose": {
                    "description": "Optional Field",
                    "type": "string"
                }
            }
        },
        "presentation.Filter": {
            "type": "object",
            "properties": {
                "pattern": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "presentation.FilterResult": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "object",
                    "additionalProperties": true
                },
                "description": {
                    "$ref": "#/definitions/presentation.Description"
                }
            }
        },
        "presentation.Format": {
            "type": "object",
            "properties": {
                "jwt": {
                    "$ref": "#/definitions/presentation.FormatSpecification"
                },
                "jwt_vc": {
                    "$ref": "#/definitions/presentation.FormatSpecification"
                },
                "jwt_vp": {
                    "$ref": "#/definitions/presentation.FormatSpecification"
                },
                "ldp": {
                    "$ref": "#/definitions/presentation.FormatSpecification"
                },
                "ldp_vc": {
                    "$ref": "#/definitions/presentation.FormatSpecification"
                },
                "ldp_vp": {
                    "$ref": "#/definitions/presentation.FormatSpecification"
                },
                "verifiable-credential+sd-jwt": {
                    "$ref": "#/definitions/presentation.FormatSpecification"
                }
            }
        },
        "presentation.FormatSpecification": {
            "type": "object",
            "properties": {
                "alg": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presentation.Alg"
                    }
                },
                "proof_type": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presentation.ProofType"
                    }
                }
            }
        },
        "presentation.InputDescriptor": {
            "type": "object",
            "properties": {
                "constraints": {
                    "$ref": "#/definitions/presentation.Constraints"
                },
                "format": {
                    "$ref": "#/definitions/presentation.Format"
                },
                "group": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "presentation.PresentationDefinition": {
            "type": "object",
            "properties": {
                "format": {
                    "$ref": "#/definitions/presentation.Format"
                },
                "id": {
                    "type": "string"
                },
                "input_descriptors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presentation.InputDescriptor"
                    }
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "submission_requirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presentation.SubmissionRequirement"
                    }
                }
            }
        },
        "presentation.ProofType": {
            "type": "string",
            "enum": [
                "JsonWebSignature2020",
                "Ed25519Signature2018",
                "EcdsaSecp256k1Signature2019",
                "RsaSignature2018"
            ],
            "x-enum-varnames": [
                "JsonWebSignature2020",
                "Ed25519Signature2018",
                "EcdsaSecp256k1Signature2019",
                "RsaSignature2018"
            ]
        },
        "presentation.Rule": {
            "type": "string",
            "enum": [
                "all",
                "pick"
            ],
            "x-enum-varnames": [
                "All",
                "Pick"
            ]
        },
        "presentation.SubmissionRequirement": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "rule": {
                    "$ref": "#/definitions/presentation.Rule"
                }
            }
        },
        "services.ServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Credential verification service API",
	Description:      "Service for handling credentials proofs (presentations)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
